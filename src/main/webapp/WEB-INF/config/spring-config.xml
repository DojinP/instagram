<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/upload/**"
		location="/WEB-INF/upload/" />
	<resources mapping="/images/**"
		location="/WEB-INF/static/images/" />
	<resources mapping="/common/css/**"
		location="/WEB-INF/static/common/css/" />
	<resources mapping="/common/js/**"
		location="/WEB-INF/static/common/js/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<!-- jdbc에서 DriverManager 방식으로 Connection 을 생성하여 관리 => 요청이 들어오면 Connection 
		을 생성하여 넘겨주는 방식 -->
	<beans:bean id="ds"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://172.30.1.41/instagram?serverTimezone=UTC" />
		<beans:property name="username" value="insta" />
		<beans:property name="password" value="insta" />
	</beans:bean>

	<!-- Spring 에서 DB연동 할 수 있는 CLRUD 메소드를 제공해주는 클래스 -->
	<beans:bean id="template"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:constructor-arg ref="ds" />
	</beans:bean>

	<!-- 파일 입력을 위해 추가해야할 부분 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="4000000" />
	</beans:bean>

	<!-- insert시 context_table과 board_table transaction을 위해 추가해야할 부분 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="ds" />
	</beans:bean>
	<aop:aspectj-autoproxy />
	<tx:annotation-driven
		transaction-manager="transactionManager" />



	<context:component-scan
		base-package="com.multi.instagram" />


</beans:beans>
